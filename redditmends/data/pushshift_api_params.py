# https://pushshift.io/api-parameters/
# 'parameter' : ['endpoint_type', 'type', 'description']
pushshift_api_parameters = {
	"limit": ["All Endpoints", "Integer", "Limit number of responses"],
	"sort": ["All Endpoints", "Filter", "Sort direction of results (\"asc\" or \"desc\")"],
	"sort_type": ["All Endpoints", "Filter", "Parameter used for sort"],
	"after": ["All Endpoints", "Integer", "Restrict results to those made after this epoch time"],
	"before": ["All Endpoints", "Integer", "Restrict results to those made before this epoch time"],
	"after_id": ["All Endpoints", "Integer", "Restrict results to those with an id greater than this value."],
	"before_id": ["All Endpoints", "Integer", "Restrict results to those with an id less than this value."],
	"created_utc": ["All Endpoints", "Integer", "Restrict results based on the epoch value given or range of values."],
	"score": ["All Endpoints", "Integer", "Restrict results based on this value or a range of values"],
	"gilded": ["All Endpoints", "Integer", "Restrict results based on this number of gildings or range of values."],
	"edited": ["All Endpoints", "Boolean", "Restrict results to those that were edited by the user."],
	"author": ["All Endpoints", "Keyword", "Restrict results to author (use \"!\" to negate, comma delimited for multiples)"],
	"subreddit": ["All Endpoints", "Keyword", "Restrict results to subreddit (use \"!\" to negate, comma delimited for multiples)"],
	"distinguished": ["All Endpoints", "Keyword", "Restrict results made by an admin / moderator / etc."],
	"retrieved_on": ["All Endpoints", "Integer", "Restrict results based on time ingested"],
	"last_updated": ["All Endpoints", "Integer", "Restrict results based on time updated"],
	"q": ["All Endpoints", "string", "Query term for comments and submissions"],
	"id": ["All Endpoints", "Integer", "Restrict results to this id or multiple ids (comma delimited)"],
	"metadata": ["All Endpoints", "Utility", "Include metadata search information"],
	"unique": ["All Endpoints", "Filter", "Restrict results to only include one of each of specific field"],
	"pretty": ["All Endpoints", "Filter", "Prettify the JSON output."],
	"html_decode": ["All Endpoints", "Filter", "HTML decode the body of comments and selftext of submissions."],
	"permalink": ["All Endpoints", "Keyword", "Restrict results to those with this value."],
	"user_removed": ["All Endpoints", "Boolean", "Restrict results based on if a user removed this object."],
	"mod_removed": ["All Endpoints", "Boolean", "Restrict results based on if a moderator removed this object."],
	"subreddit_type": ["All Endpoints", "keyword", "Restrict results based on subreddit type"],
	"author_flair_css_class": ["All Endpoints", "keyword", "Restrict results to those with this value."],
	"author_flair_text": ["All Endpoints", "keyword", "Restrict results to those with this value."],

	# Comments
	"reply_delay": ["Comment Endpoint", "Integer", "Restrict based on time elapsed in seconds when comment reply was made"],
	"nest_level": ["Comment Endpoint", "Integer", "Restrict based on nest level of comment. 1 is a top level comment"],
	"sub_reply_delay": ["Comment Endpoint", "Integer", "Restrict based on number of seconds elapsed from when submission was made"],
	"utc_hour_of_week": ["Comment Endpoint", "Integer", "Restrict based on hour of week when comment was made (for aggregations)"],
	"link_id": ["Comment Endpoint", "Integer", "Restrict results based on submission id"],
	"parent_id": ["Comment Endpoint", "Integer", "Restrict results based on parent id"],

	# Submissions
	"over_18": ["Submission Endpoint", "Boolean", "Restrict results based on SFW/NSFW"],
	"locked": ["Submission Endpoint", "Boolean", "Restrict results based on if submission was locked"],
	"spoiler": ["Submission Endpoint", "Boolean", "Restrict results based on if submission is spoiler"],
	"is_video": ["Submission Endpoint", "Boolean", "Restrict results based on if submission is video"],
	"is_self": ["Submission Endpoint", "Boolean", "Restrict results based on if submission is a self post"],
	"is_original_content": ["Submission Endpoint", "Boolean", "Restrict results based on if submission is original content"],
	"is_reddit_media_domain": ["Submission Endpoint", "Boolean", "Is Submission hosted on Reddit Media"],
	"whitelist_status": ["Submission Endpoint", "Keyword", "Submission whitelist status"],
	"parent_whitelist_status": ["Submission Endpoint", "Keyword", "Unknown"],
	"is_crosspostable": ["Submission Endpoint", "Boolean", "Restrict results based on if Submission is crosspostable"],
	"can_gild": ["Submission Endpoint", "Boolean", "Restrict results based on if Submission is gildable"],
	"suggested_sort": ["Submission Endpoint", "Keyword", "Suggested sort for submission"],
	"no_follow": ["Submission Endpoint", "Boolean", "Unknown"],
	"send_replies": ["Submission Endpoint", "Boolean", "Unknown"],
	"link_flair_css_class": ["Submission Endpoint", "Keyword", "Link Flair CSS Class string"],
	"link_flair_text": ["Submission Endpoint", "Keyword", "Link Flair Text"],
	"num_crossposts": ["Submission Endpoint", "Integer", "Number of times Submission has been crossposted"],
	"title": ["Submission Endpoint", "String", "Restrict results based on title"],
	"selftext": ["Submission Endpoint", "String", "Restrict results based on selftext"],
	"quarantine": ["Submission Endpoint", "Boolean", "Is Submission quarantied"],
	"pinned": ["Submission Endpoint", "Boolean", "Is Submission Pinned in Subreddit"],
	"stickied": ["Submission Endpoint", "Boolean", "Is Submission Stickied"],
	"category": ["Submission Endpoint", "Keyword", "Submission Category"],
	"contest_mode": ["Submission Endpoint", "Boolean", "Is Submission a contest"],
	"subreddit_subscribers": ["Submission Endpoint", "Integer", "Number of Subscribers to Subreddit when post was made"],
	"url": ["Submission Endpoint", "Keyword", "Restrict results based on submission url"],
	"domain": ["Submission Endpoint", "Keyword", "Restrict results based on domain of submission"],
	"thumbnail": ["Submission Endpoint", "Keyword", "Thumbnail of Submission"],

	# Subreddits
	"description": ["Subreddit Endpoint", "String", "Search full description (sidebar content) of subreddit"],
	"public_description": ["Subreddit Endpoint", "String", "Search short description of subreddit"],
	"title": ["Subreddit Endpoint", "String", "Search title of subreddit"],
	"header_title": ["Subreddit Endpoint", "String", "Search the header of subreddit"],
	"submit_text": ["Subreddit Endpoint", "String", "Search the submit text field of subreddit"],
	"subscribers": ["Subreddit Endpoint", "Integer", "Restrict based on number of subscribers to subreddit"],
	"comment_score_hide_mins": ["Subreddit Endpoint", "Integer", "Restrict based on how long comment scores are hidden in subreddit"],
	"suggested_comment_sort": ["Subreddit Endpoint", "Keyword", "Restrict based on the suggested sort for subreddit"],
	"submission_type": ["Subreddit Endpoint", "Keyword", "Restrict based on the submission types allowed in subreddit"],
	"spoilers_enabled": ["Subreddit Endpoint", "Boolean", "Restrict based on if spoilers are enabled for subreddit"],
	"lang": ["Subreddit Endpoint", "Keyword", "Restrict based on the default language of the subreddit"],
	"is_enrolled_in_new_modmail": ["Subreddit Endpoint", "Boolean", "Restrict based on if subreddit is enrolled in the new modmail"],
	"audience_target": ["Subreddit Endpoint", "Keyword", "Restrict based on the target audience of subreddit"],
	"allow_videos": ["Subreddit Endpoint", "Boolean", "Restrict based on if subreddit allows video submissions"],
	"allow_images": ["Subreddit Endpoint", "Boolean", "Restrict based on if subreddit allows image submissions"],
	"allow_videogifs": ["Subreddit Endpoint", "Boolean", "Restrict based on if subreddit allows video gifs"],
	"advertiser_category": ["Subreddit Endpoint", "Keyword", "Restrict based on the advertiser category of subreddit"],
	"hide_ad": ["Subreddit Endpoint", "Boolean", "Restrict based on if subreddit hides ads"],
	"subreddit_type": ["Subreddit Endpoint", "Keyword", "Restrict based on the subreddit type (Public, Private, User, etc.)"],
	"wiki_enabled": ["Subreddit Endpoint", "Boolean", "Restrict based on whether subreddit has wiki enabled"],
	"user_sr_theme_enabled": ["Subreddit Endpoint", "Boolean", "(currently unknown what this field is for)"],
	"whitelist_status": ["Subreddit Endpoint", "Keyword", "Restrict based on whitelist status of subreddit"],
	"submit_link_label": ["Subreddit Endpoint", "Keyword", "Restrict based on the submit label of subreddit"],
	"show_media_preview": ["Subreddit Endpoint", "Boolean", "Restrict based on whether subreddit as media preview enabled"]
}